---

- hosts: localhost
  gather_facts: False

  vars:
    key_name: amy_aws_02             # Key used for SSH
    region: ap-southeast-2       # Region may affect response and pricing
    image: ami-0c140d4585dfe62d1 # look in ec2 > ami (filter owner alias: amazon) or amis of manually launched instances
    id: "example testing"
    instance_type: t2.micro       # Choose instance type, check AWS for pricing
    vpc_id: vpc-01919eff30f3ad8f6
    sec_group: "launch-wizard"

  tasks:
    - name: Provisioning EC2 instances
      block:

      - name: Create security group
        amazon.aws.ec2_security_group:
          name: "{{ sec_group }}"
          description: "Sec group for app"
          region: "{{ region }}"
          vpc_id: vpc-01919eff30f3ad8f6
          # aws_access_key: "{{ec2_access_key}}"  # From vault as defined
          # aws_secret_key: "{{ec2_secret_key}}"  # From vault as defined
          rules:                                # allows ssh on port 22
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port

      # - name: Amazon EC2 | Create Key Pair from existing .pub file
      #   amazon.aws.ec2_key:
      #     name: "{{ key_name }}"
      #     region: "{{ region }}"
      #     key_material: "{{ lookup('file', 'files/my_aws.pub') }}"

      - name: Create a new EC2 key pair (AWS generates key)
        amazon.aws.ec2_key:
          name: "{{ key_name }}"
          region: "{{ region }}"
          state: present
        register: aws_ec2_key_pair
        # no_log: true

      - name: Check available security groups
        amazon.aws.ec2_group_info:
          region: ap-southeast-2
        register: sg_info

      - name: Show SGs
        debug:
          var: sg_info.security_groups


      # - name: Start an instance with a public IP address
      #   amazon.aws.ec2_instance:
      #     name: "amyexample02"
      #     key_name: "{{ key_name }}"
      #     vpc_subnet_id: "{{ vpc_id }}"
      #     instance_type: "{{ instance_type }}"
      #     security_group: "{{ sec_group }}"
      #     # aws_access_key: "{{ ec2_access_key }}"
      #     # aws_secret_key: "{{ ec2_secret_key }}"
      #     region: "{{ region }}"
      #     network:
      #       assign_public_ip: true
      #     image_id: "{{ image }}"
          # tags:
          #   Environment: Testing


      - name: Launch EC2 with valid SG ID
        amazon.aws.ec2_instance:
          name: "amyexample02"
          region: "{{ region }}"
          image_id: "{{ image }}"
          instance_type: "{{ instance_type }}"
          key_name: "{{ key_name }}"
          vpc_subnet_id: subnet-0dce16717bfcbeed1
          security_group: sg-0d12c179d8f2cdc94  # âœ… Using ID for 'test-security-group'
          network:
            assign_public_ip: true

      # Always require the 'create_ec2' tag to provision EC2 instance
      # tags: ['never', 'create_ec2'] 

    # - name: Facts
    #   block: # this block prints out instance data

    #   - name: Get instances facts
    #     ec2_instance_info:
    #       aws_access_key: "{{ ec2_access_key }}"
    #       aws_secret_key: "{{ ec2_secret_key }}"
    #       region: "{{ region }}"
    #     register: result

    #   - name: Instances ID
    #     debug:
    #       msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
    #     loop: "{{ result.instances }}"
    #   tags: always